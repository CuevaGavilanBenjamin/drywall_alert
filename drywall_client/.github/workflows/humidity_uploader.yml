name: DryWall Client - Upload to Bank

on:
  schedule:
    # Ejecutar cada 10 minutos para demo
    - cron: "*/10 * * * *"
  workflow_dispatch:
    # Permitir ejecuci√≥n manual
  push:
    branches: [main, master]

jobs:
  upload-to-bank:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup SSH key for bank connection
        run: |
          echo "${{ secrets.BANK_SSH_KEY }}" > bank_key
          chmod 600 bank_key
          
      - name: Generate humidity data
        run: |
          timestamp=$(date +"%Y%m%d_%H%M")
          python generate_humidity.py --format csv --num-records 50 --output "humedad_${timestamp}.csv"
          echo "Generated file: humedad_${timestamp}.csv"
          ls -la humedad_*.csv

      - name: Upload to Bank SFTP
        env:
          BANK_HOST: ${{ secrets.BANK_HOST }}
          BANK_PORT: ${{ secrets.BANK_PORT }}
          BANK_USER: ${{ secrets.BANK_USER }}
          REMOTE_DIR: ${{ secrets.BANK_REMOTE_DIR }}
        run: |
          timestamp=$(date +"%Y%m%d_%H%M")
          echo "[CLIENT] Uploading to bank at $BANK_HOST:$BANK_PORT"
          python sftp_upload.py \
            --host "$BANK_HOST" \
            --port "$BANK_PORT" \
            --username "$BANK_USER" \
            --key-file bank_key \
            --local-file "humedad_${timestamp}.csv" \
            --remote-path "$REMOTE_DIR"

      - name: Verify upload via Bank API
        env:
          BANK_API_URL: ${{ secrets.BANK_API_URL }}
        run: |
          echo "[CLIENT] Checking bank status via API: $BANK_API_URL"
          python check_status.py --api-only --api-url "$BANK_API_URL/api/drywall/status"

      - name: Archive generated data
        uses: actions/upload-artifact@v3
        with:
          name: humidity-data-sent-to-bank
          path: humedad_*.csv
          retention-days: 7

  test-integration:
    runs-on: ubuntu-latest
    needs: upload-to-bank

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test key generation
        run: |
          python generate_keys.py --key-size 2048 --name test_integration_key

      - name: Test data generation
        run: |
          python generate_humidity.py --format json --num-records 5 --preview

      - name: Integration test summary
        env:
          BANK_API_URL: ${{ secrets.BANK_API_URL }}
        run: |
          echo "=== INTEGRATION TEST SUMMARY ==="
          echo "‚úÖ Key generation: PASSED"
          echo "‚úÖ Data generation: PASSED" 
          echo "‚úÖ SFTP upload: PASSED (see upload-to-bank job)"
          echo "‚úÖ Bank API verification: PASSED (see upload-to-bank job)"
          echo "üè¶ Bank system: $BANK_API_URL"
          echo "üìä Client repository: ${{ github.repository }}"
          echo "=== EXTERNAL INTEGRATION SUCCESSFUL ==="
          pip install -r requirements.txt

      - name: Check system status
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_PORT: ${{ secrets.SFTP_PORT }}
          SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
          SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
          ERP_API_URL: ${{ secrets.ERP_API_URL }}
        run: |
          cd drywall_client
          python check_status.py --check-network --check-sftp --check-api

      - name: Generate humidity data
        run: |
          cd drywall_client
          python generate_humidity.py --format csv --samples 100 --output humidity_data.csv

      - name: Upload data via SFTP
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_PORT: ${{ secrets.SFTP_PORT }}
          SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
          SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
          SFTP_REMOTE_PATH: ${{ secrets.SFTP_REMOTE_PATH }}
        run: |
          cd drywall_client
          python sftp_upload.py --host $SFTP_HOST --port $SFTP_PORT --username $SFTP_USERNAME --password $SFTP_PASSWORD --local-file humidity_data.csv --remote-path $SFTP_REMOTE_PATH

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: humidity-data
          path: drywall_client/humidity_data.csv
          retention-days: 7

  test-scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          cd drywall_client
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test key generation
        run: |
          cd drywall_client
          python generate_keys.py --key-type rsa --key-size 2048 --output test_key

      - name: Test humidity generation
        run: |
          cd drywall_client
          python generate_humidity.py --format json --samples 10 --output test_humidity.json

      - name: Verify generated files
        run: |
          cd drywall_client
          ls -la test_key* test_humidity.json
          head -n 5 test_humidity.json
